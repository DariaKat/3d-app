"use strict";(self.webpackChunkmyself_app=self.webpackChunkmyself_app||[]).push([[93],{5093:(e,n,t)=>{t.r(n),t.d(n,{default:()=>A});var r,a,i,s,l,o=t(5893),d=t(7294),u=t(3857),p=t(9362),c=t(5019),m=t(19),h=t(7536),f=function(e){var n=e.match(/^(?:0\.(?:0[0-9]|[0-9]\d?)|[0-9]\d*(?:\.\d{1,2})?)(?:e[+-]?\d+)?$/);return(null==n?void 0:n.length)>0||"Введенное значение не является числом"},g=t(5286),x=g.ZP.form(r||(s=["\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 500px;\n  background: #ffffff;\n  box-shadow: 0px 0px 20px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 13px;\n  padding: 20px;\n  margin: 16px;\n\n  .message {\n    display: flex;\n    width: 100%;\n    div {\n      display: flex;\n      width: 100%;\n      margin-bottom: 0;\n    }\n  }\n\n  div:first-child {\n    width: 100%;\n  }\n\n  div {\n    margin-bottom: 20px;\n  }\n\n  input {\n    margin-bottom: 20px;\n  }\n\n  button {\n    max-width: 250px;\n    width: 100%;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin: 20px auto;\n  }\n"],l=["\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 500px;\n  background: #ffffff;\n  box-shadow: 0px 0px 20px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 13px;\n  padding: 20px;\n  margin: 16px;\n\n  .message {\n    display: flex;\n    width: 100%;\n    div {\n      display: flex;\n      width: 100%;\n      margin-bottom: 0;\n    }\n  }\n\n  div:first-child {\n    width: 100%;\n  }\n\n  div {\n    margin-bottom: 20px;\n  }\n\n  input {\n    margin-bottom: 20px;\n  }\n\n  button {\n    max-width: 250px;\n    width: 100%;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin: 20px auto;\n  }\n"],Object.defineProperty?Object.defineProperty(s,"raw",{value:l}):s.raw=l,r=s)),v={бетон:{bulk_mass_dry_condition:2330,thermal_conductivity:function(e){return 1.2-35e-5*e},heat_capacity:function(e){return.71+84e-5*e},reduced_radiation_coefficient:function(e){return 3.26-.0023*e},blackness:function(e){return.64-45e-5*e}}},y=function(e,n,t){if(t||2===arguments.length)for(var r,a=0,i=n.length;a<i;a++)!r&&a in n||(r||(r=Array.prototype.slice.call(n,0,a)),r[a]=n[a]);return e.concat(r||Array.prototype.slice.call(n))},b=function(){return b=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},b.apply(this,arguments)},j=function(e){var n,t,r,a,i,s,l=e.setIsOpen,d=e.setGetResult,g=(0,h.cI)(),j=g.control,w=g.handleSubmit,T=g.formState.errors;return(0,o.jsx)("div",{children:(0,o.jsxs)(x,b({onSubmit:w((function(e){if(e){var n=function(e){var n=v[e.materialType];return n?function(e,n){var t=e.thermal_conductivity(+n.startTemp),r=t/((e.heat_capacity(+n.startTemp)+.05*+n.humidity)*e.bulk_mass_dry_condition)*3.6,a=t/29*2>.03?.03:.01,i=Math.round(+n.wallThickness/a),s=a*a/(2*r),l=y([],Array(i+1),!0).map((function(e,n){return s*(n+1)})),o=y([],Array(i+1),!0).map((function(e,t){return 345*Math.log10(8*s*(t+1)*60+1)+ +n.startTemp})),d=n.tempHeatedSurface.replace(/\s/g,"").split(",").map((function(e){return Number(e)})),u=d.length<i+1?y(y([],d,!0),Array(i+1-d.length).fill(d[d.length-1]),!0):d,p=y([],Array(i+1),!0).map((function(n,t){return 29+e.reduced_radiation_coefficient(o[t])*((Math.pow((o[t]+273)/100,4)-Math.pow((u[t]+273)/100,4))/(o[t]-u[t]))}));return function(e,n,t,r,a,i,s){for(var l=[+t.startTemp],o=[+t.startTemp],d=Array(a+1).fill(+t.startTemp),u=Array(a+1).fill(+t.startTemp),p=Array(a+1).fill(+t.startTemp),c=[],m=1;m<=a;m++)c.push(y([],Array(m+1).fill(+t.startTemp),!0));for(var h=0;u[u.length-1]<t.endTemp;){var f=(e[h]+c[0][c[0].length-1])/2,g=r.thermal_conductivity(f),x=c[0][c[0].length-1]+(e[h]-c[0][c[0].length-1])*(i/(g/n[h]+i/2));l.push(x);var v=(x+c[1][c[1].length-2])/2;c[0].push(v),o.push(v);for(var b=1;b<a;b++)b+1<a?c[b].push((c[b-1][c[b-1].length-1]+c[b+1][c[b+1].length-2])/2):c[b].push((c[b-1][c[b-1].length-1]+d[d.length-1])/2);var j=c[c.length-1][c[c.length-1].length-2],w=(j+u[u.length-1])/2,T=r.thermal_conductivity(w),_=r.heat_capacity(w),k=u[u.length-1],Z=1.5*Math.cbrt(k-+t.startTemp)+5.67*r.blackness(k)*((Math.pow((k+273)/100,4)-Math.pow((+t.startTemp+273)/100,4))/(k-+t.startTemp)),O=isNaN(Z)?0:Z,P=k+2*s[h]*(T*(j-k)-O*i*(k-+t.startTemp))/(r.bulk_mass_dry_condition*i*i*_);p.push(P);var A=0===O?0:T/O,N=j+(c[c.length-1][c[c.length-1].length-1]-j)*((A-i/2)/(A+i/2)),S=N<0?+t.startTemp:N;u.push(S);var M=(c[c.length-1][c[c.length-1].length-1]+N)/2;d.push(M),h++}return{tmn:l,top:o,tlayer:c,tnp:d,tnm:u,arrayYak:p}}(o,p,n,e,i,a,l)}(n,e):"error"}(e);n&&(d(n),l(!0))}}))},{children:[(0,o.jsx)(h.Qr,{name:"materialType",control:j,defaultValue:"бетон",rules:{required:"Обязательное поле"},render:function(e){var n,t=e.field;return(0,o.jsx)(u.Z,b({placeholder:"Выбеите материал",className:"select",status:(null===(n=null==T?void 0:T.materialType)||void 0===n?void 0:n.message)&&"error",options:[{value:"бетон",label:"Бетон"}]},t))}}),(null===(n=null==T?void 0:T.materialType)||void 0===n?void 0:n.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(h.Qr,{name:"wallThickness",control:j,defaultValue:"0.12",rules:{required:"Обязательное поле",validate:function(e){return f(e)}},render:function(e){var n,t=e.field;return(0,o.jsx)(c.Z,b({placeholder:"Толщина стены",status:(null===(n=null==T?void 0:T.wallThickness)||void 0===n?void 0:n.message)&&"error"},t))}}),(null===(t=null==T?void 0:T.wallThickness)||void 0===t?void 0:t.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(h.Qr,{name:"startTemp",control:j,defaultValue:"20",rules:{required:"Обязательное поле",validate:function(e){return f(e)}},render:function(e){var n,t=e.field;return(0,o.jsx)(c.Z,b({placeholder:"Начальная температура",status:(null===(n=null==T?void 0:T.startTemp)||void 0===n?void 0:n.message)&&"error"},t))}}),(null===(r=null==T?void 0:T.startTemp)||void 0===r?void 0:r.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(h.Qr,{name:"endTemp",control:j,defaultValue:"180",rules:{required:"Обязательное поле",validate:function(e){return f(e)}},render:function(e){var n,t=e.field;return(0,o.jsx)(c.Z,b({placeholder:"Конечная температура",status:(null===(n=null==T?void 0:T.endTemp)||void 0===n?void 0:n.message)&&"error"},t))}}),(null===(a=null==T?void 0:T.endTemp)||void 0===a?void 0:a.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(h.Qr,{name:"humidity",control:j,defaultValue:"2",rules:{required:"Обязательное поле",validate:function(e){return f(e)}},render:function(e){var n,t=e.field;return(0,o.jsx)(c.Z,b({placeholder:"Влажность",status:(null===(n=null==T?void 0:T.startTemp)||void 0===n?void 0:n.message)&&"error"},t))}}),(null===(i=null==T?void 0:T.startTemp)||void 0===i?void 0:i.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(h.Qr,{name:"tempHeatedSurface",control:j,defaultValue:"415.6, 615, 718, 782.8",rules:{required:"Обязательное поле"},render:function(e){var n,t=e.field;return(0,o.jsx)(c.Z,b({placeholder:"Температура обогреваемой поверхности",status:(null===(n=null==T?void 0:T.tempHeatedSurface)||void 0===n?void 0:n.message)&&"error"},t))}}),(null===(s=null==T?void 0:T.tempHeatedSurface)||void 0===s?void 0:s.message)&&(0,o.jsx)(p.Z,{className:"message",message:"Обязательное поле",type:"error"}),(0,o.jsx)(m.ZP,b({htmlType:"submit",type:"primary"},{children:"Рассчитать"}))]}))})},w=t(5953),T=t(6037),_=g.ZP.div(a||(a=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e}(["\n  position: relative;\n  background: #fff;\n  box-shadow: 0px 0px 20px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 13px;\n  max-width: 700px;\n  width: 100%;\n  margin: 0 auto 20px;\n  div {\n    height: 472px !important;\n    canvas {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n    }\n  }\n"],["\n  position: relative;\n  background: #fff;\n  box-shadow: 0px 0px 20px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 13px;\n  max-width: 700px;\n  width: 100%;\n  margin: 0 auto 20px;\n  div {\n    height: 472px !important;\n    canvas {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n    }\n  }\n"]))),k=function(){return k=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},k.apply(this,arguments)},Z=function(e){var n=e.getResult;return console.log(n),(0,o.jsx)(_,k({id:"canvas-container"},{children:(0,o.jsxs)(w.Xz,k({flat:!0,linear:!0},{children:[(0,o.jsx)("ambientLight",{intensity:.5}),(0,o.jsx)("spotLight",{position:[10,10,10],angle:.15,penumbra:1}),(0,o.jsx)("pointLight",{position:[-10,-10,-10]}),(0,o.jsxs)("mesh",{children:[(0,o.jsx)("boxGeometry",{args:[1,1,1]}),(0,o.jsx)("meshStandardMaterial",{color:"orange"})]}),(0,o.jsx)(T.z,{})]}))}))},O=g.ZP.div(i||(i=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e}(["\n  padding-bottom: 20px;\n"],["\n  padding-bottom: 20px;\n"]))),P=function(){var e=(0,d.useState)(null),n=e[0],t=e[1],r=(0,d.useState)(!1),a=r[0],i=r[1];return(0,o.jsxs)(O,{children:[(0,o.jsx)(j,{setIsOpen:i,setGetResult:t}),a&&(0,o.jsx)(Z,{getResult:n})]})};const A=function(){return(0,o.jsx)(P,{})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFRLE1BQU8sQ0FBRUcsTUFBT0YsSUFBaUJELEVBQU9DLElBQU1BLEVBQ2xHRCxDQUNYLENBRXNFLENBQXFCLENBQUMsK0JBQWdDLENBQUMsa0NNQWxIZ0osRUFBWSxXQUNuQixJQUFJekcsR0FBSyxJQUFBMEcsVUFBUyxNQUFPZixFQUFZM0YsRUFBRyxHQUFJUSxFQUFlUixFQUFHLEdBQzFEQyxHQUFLLElBQUF5RyxXQUFTLEdBQVFDLEVBQVMxRyxFQUFHLEdBQUlNLEVBQVlOLEVBQUcsR0FDekQsT0FBUSxVQUFNdUcsRUFBTyxDQUFFMUYsU0FBVSxFQUFDLFNBQUtmLEVBQVUsQ0FBRVEsVUFBV0EsRUFBV0MsYUFBY0EsSUFBaUJtRyxJQUFVLFNBQUtqQixFQUFPLENBQUVDLFVBQVdBLE1BQy9JLEVDSkEsUUFIZSxXQUNYLE9BQU8sU0FBS2MsRUFBVyxDQUFDLEVBQzVCLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teXNlbGZfYXBwLy4vc3JjL2ZlYXR1cmVzL0Zvcm0vdWkvRm9ybS5zdHlsZWQudHN4Iiwid2VicGFjazovL215c2VsZl9hcHAvLi9zcmMvZmVhdHVyZXMvTW9kZWwvdWkvTW9kZWwuc3R5bGVkLnRzeCIsIndlYnBhY2s6Ly9teXNlbGZfYXBwLy4vc3JjL3dpZGdldHMvTWFpbkJsb2NrL3VpL01haW5CbG9jay5zdHlsZWQudHN4Iiwid2VicGFjazovL215c2VsZl9hcHAvLi9zcmMvZmVhdHVyZXMvRm9ybS9saWIvdmFsaWRhdGUudHMiLCJ3ZWJwYWNrOi8vbXlzZWxmX2FwcC8uL3NyYy9mZWF0dXJlcy9Gb3JtL2xpYi9kYXRhLnRzIiwid2VicGFjazovL215c2VsZl9hcHAvLi9zcmMvZmVhdHVyZXMvRm9ybS9saWIvY2FsY3VsYXRlLnRzIiwid2VicGFjazovL215c2VsZl9hcHAvLi9zcmMvZmVhdHVyZXMvRm9ybS91aS9Gb3JtLnRzeCIsIndlYnBhY2s6Ly9teXNlbGZfYXBwLy4vc3JjL2ZlYXR1cmVzL01vZGVsL3VpL01vZGVsLnRzeCIsIndlYnBhY2s6Ly9teXNlbGZfYXBwLy4vc3JjL3dpZGdldHMvTWFpbkJsb2NrL3VpL01haW5CbG9jay50c3giLCJ3ZWJwYWNrOi8vbXlzZWxmX2FwcC8uL3NyYy9wYWdlcy9NYWluUGFnZS91aS9NYWluUGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fbWFrZVRlbXBsYXRlT2JqZWN0ID0gKHRoaXMgJiYgdGhpcy5fX21ha2VUZW1wbGF0ZU9iamVjdCkgfHwgZnVuY3Rpb24gKGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcclxuZXhwb3J0IHZhciBGb3JtID0gc3R5bGVkLmZvcm0odGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtYXgtd2lkdGg6IDUwMHB4O1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgbWFyZ2luOiAxNnB4O1xcblxcbiAgLm1lc3NhZ2Uge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGl2IHtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XFxuICAgIH1cXG4gIH1cXG5cXG4gIGRpdjpmaXJzdC1jaGlsZCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgZGl2IHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gIH1cXG5cXG4gIGlucHV0IHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gIH1cXG5cXG4gIGJ1dHRvbiB7XFxuICAgIG1heC13aWR0aDogMjUwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgICBtYXJnaW46IDIwcHggYXV0bztcXG4gIH1cXG5cIl0sIFtcIlxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtYXgtd2lkdGg6IDUwMHB4O1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgbWFyZ2luOiAxNnB4O1xcblxcbiAgLm1lc3NhZ2Uge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGl2IHtcXG4gICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XFxuICAgIH1cXG4gIH1cXG5cXG4gIGRpdjpmaXJzdC1jaGlsZCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgZGl2IHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gIH1cXG5cXG4gIGlucHV0IHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gIH1cXG5cXG4gIGJ1dHRvbiB7XFxuICAgIG1heC13aWR0aDogMjUwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgICBtYXJnaW46IDIwcHggYXV0bztcXG4gIH1cXG5cIl0pKSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5leHBvcnQgdmFyIENvbnRhaW5lciA9IHN0eWxlZC5kaXYodGVtcGxhdGVPYmplY3RfMSB8fCAodGVtcGxhdGVPYmplY3RfMSA9IF9fbWFrZVRlbXBsYXRlT2JqZWN0KFtcIlxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxuICBtYXgtd2lkdGg6IDcwMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDAgYXV0byAyMHB4O1xcbiAgZGl2IHtcXG4gICAgaGVpZ2h0OiA0NzJweCAhaW1wb3J0YW50O1xcbiAgICBjYW52YXMge1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICBtYXJnaW46IDA7XFxuICAgIH1cXG4gIH1cXG5cIl0sIFtcIlxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxuICBtYXgtd2lkdGg6IDcwMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDAgYXV0byAyMHB4O1xcbiAgZGl2IHtcXG4gICAgaGVpZ2h0OiA0NzJweCAhaW1wb3J0YW50O1xcbiAgICBjYW52YXMge1xcbiAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICBtYXJnaW46IDA7XFxuICAgIH1cXG4gIH1cXG5cIl0pKSk7XHJcbnZhciB0ZW1wbGF0ZU9iamVjdF8xO1xyXG4iLCJ2YXIgX19tYWtlVGVtcGxhdGVPYmplY3QgPSAodGhpcyAmJiB0aGlzLl9fbWFrZVRlbXBsYXRlT2JqZWN0KSB8fCBmdW5jdGlvbiAoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xyXG5leHBvcnQgdmFyIEJsb2NrID0gc3R5bGVkLmRpdih0ZW1wbGF0ZU9iamVjdF8xIHx8ICh0ZW1wbGF0ZU9iamVjdF8xID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcXG5cIl0sIFtcIlxcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XFxuXCJdKSkpO1xyXG52YXIgdGVtcGxhdGVPYmplY3RfMTtcclxuIiwiZXhwb3J0IHZhciBjaGVja09mTnVtYmVyID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICB2YXIgbWF0Y2hlcyA9IHZhbHVlLm1hdGNoKC9eKD86MFxcLig/OjBbMC05XXxbMC05XVxcZD8pfFswLTldXFxkKig/OlxcLlxcZHsxLDJ9KT8pKD86ZVsrLV0/XFxkKyk/JC8pO1xyXG4gICAgcmV0dXJuICgobWF0Y2hlcyA9PT0gbnVsbCB8fCBtYXRjaGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaGVzLmxlbmd0aCkgPiAwIHx8IFwi0JLQstC10LTQtdC90L3QvtC1INC30L3QsNGH0LXQvdC40LUg0L3QtSDRj9Cy0LvRj9C10YLRgdGPINGH0LjRgdC70L7QvFwiKTtcclxufTtcclxuIiwiZXhwb3J0IHZhciBkZWZhdWx0RGF0YSA9IHtcclxuICAgICfQsdC10YLQvtC9Jzoge1xyXG4gICAgICAgIGJ1bGtfbWFzc19kcnlfY29uZGl0aW9uOiAyMzMwLFxyXG4gICAgICAgIHRoZXJtYWxfY29uZHVjdGl2aXR5OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gMS4yIC0gMC4wMDAzNSAqIHQ7IH0sXHJcbiAgICAgICAgaGVhdF9jYXBhY2l0eTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDAuNzEgKyAwLjAwMDg0ICogdDsgfSxcclxuICAgICAgICByZWR1Y2VkX3JhZGlhdGlvbl9jb2VmZmljaWVudDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDMuMjYgLSAwLjAwMjMgKiB0OyB9LFxyXG4gICAgICAgIGJsYWNrbmVzczogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDAuNjQgLSAwLjAwMDQ1ICogdDsgfSxcclxuICAgIH1cclxufTtcclxuIiwidmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xyXG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcclxuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XHJcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XHJcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcclxufTtcclxuaW1wb3J0IHsgZGVmYXVsdERhdGEgfSBmcm9tIFwiLi9kYXRhXCI7XHJcbnZhciBtYXRoTW9kZWwgPSBmdW5jdGlvbiAodGVtcEFycmF5LCBib3VuZGFyeUNvbmRpdGlvbnNBcnJheSwgZGF0YSwgaW5mb01hdGVyaWFsLCBjb3VudExheWVycywgbGF5ZXIsIHRpbWVJbnRlcnZhbEFycmF5KSB7XHJcbiAgICAvL9C40L3QuNGG0LjQsNC70LjQt9C40YDRg9C10Lwg0LzQsNGB0YHQuNCy0Ysg0Lgg0LfQsNC/0L7Qu9C90Y/QtdC8INC/0LXRgNCy0LjRh9C90YvQvNC4INC00LDQvdC90YvQvNC4XHJcbiAgICB2YXIgdG1uID0gWytkYXRhLnN0YXJ0VGVtcF07XHJcbiAgICB2YXIgdG9wID0gWytkYXRhLnN0YXJ0VGVtcF07XHJcbiAgICB2YXIgdG5wID0gQXJyYXkoY291bnRMYXllcnMgKyAxKS5maWxsKCtkYXRhLnN0YXJ0VGVtcCk7XHJcbiAgICB2YXIgdG5tID0gQXJyYXkoY291bnRMYXllcnMgKyAxKS5maWxsKCtkYXRhLnN0YXJ0VGVtcCk7XHJcbiAgICB2YXIgYXJyYXlZYWsgPSBBcnJheShjb3VudExheWVycyArIDEpLmZpbGwoK2RhdGEuc3RhcnRUZW1wKTtcclxuICAgIHZhciB0bGF5ZXIgPSBbXTtcclxuICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IGNvdW50TGF5ZXJzOyBpKyspIHtcclxuICAgICAgICB0bGF5ZXIucHVzaChfX3NwcmVhZEFycmF5KFtdLCBBcnJheShpICsgMSkuZmlsbCgrZGF0YS5zdGFydFRlbXApLCB0cnVlKSk7XHJcbiAgICB9XHJcbiAgICB2YXIgaW5kZXggPSAwO1xyXG4gICAgd2hpbGUgKHRubVt0bm0ubGVuZ3RoIC0gMV0gPCBkYXRhLmVuZFRlbXApIHtcclxuICAgICAgICB2YXIgYW1iaWVudFRlbXBlcmF0dXJlID0gKHRlbXBBcnJheVtpbmRleF0gKyB0bGF5ZXJbMF1bdGxheWVyWzBdLmxlbmd0aCAtIDFdKSAvIDI7XHJcbiAgICAgICAgdmFyIHRoZXJtYWxDb25kdWN0aXZpdHkgPSBpbmZvTWF0ZXJpYWwudGhlcm1hbF9jb25kdWN0aXZpdHkoYW1iaWVudFRlbXBlcmF0dXJlKTtcclxuICAgICAgICB2YXIgdGVtcCA9IHRsYXllclswXVt0bGF5ZXJbMF0ubGVuZ3RoIC0gMV0gK1xyXG4gICAgICAgICAgICAodGVtcEFycmF5W2luZGV4XSAtIHRsYXllclswXVt0bGF5ZXJbMF0ubGVuZ3RoIC0gMV0pICpcclxuICAgICAgICAgICAgICAgIChsYXllciAvXHJcbiAgICAgICAgICAgICAgICAgICAgKHRoZXJtYWxDb25kdWN0aXZpdHkgLyBib3VuZGFyeUNvbmRpdGlvbnNBcnJheVtpbmRleF0gKyBsYXllciAvIDIpKTtcclxuICAgICAgICB0bW4ucHVzaCh0ZW1wKTtcclxuICAgICAgICB2YXIgdGVtcG9wID0gKHRlbXAgKyB0bGF5ZXJbMV1bdGxheWVyWzFdLmxlbmd0aCAtIDJdKSAvIDI7XHJcbiAgICAgICAgdGxheWVyWzBdLnB1c2godGVtcG9wKTtcclxuICAgICAgICB0b3AucHVzaCh0ZW1wb3ApO1xyXG4gICAgICAgIGZvciAodmFyIGogPSAxOyBqIDwgY291bnRMYXllcnM7IGorKykge1xyXG4gICAgICAgICAgICBpZiAoaiArIDEgPCBjb3VudExheWVycykge1xyXG4gICAgICAgICAgICAgICAgdGxheWVyW2pdLnB1c2goKHRsYXllcltqIC0gMV1bdGxheWVyW2ogLSAxXS5sZW5ndGggLSAxXSArXHJcbiAgICAgICAgICAgICAgICAgICAgdGxheWVyW2ogKyAxXVt0bGF5ZXJbaiArIDFdLmxlbmd0aCAtIDJdKSAvXHJcbiAgICAgICAgICAgICAgICAgICAgMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0bGF5ZXJbal0ucHVzaCgodGxheWVyW2ogLSAxXVt0bGF5ZXJbaiAtIDFdLmxlbmd0aCAtIDFdICsgdG5wW3RucC5sZW5ndGggLSAxXSkgLyAyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcGFyYW1QcmVFbmRMZW5ndGggPSB0bGF5ZXJbdGxheWVyLmxlbmd0aCAtIDFdW3RsYXllclt0bGF5ZXIubGVuZ3RoIC0gMV0ubGVuZ3RoIC0gMl07XHJcbiAgICAgICAgdmFyIHRlbXBuZXcgPSAocGFyYW1QcmVFbmRMZW5ndGggKyB0bm1bdG5tLmxlbmd0aCAtIDFdKSAvIDI7XHJcbiAgICAgICAgdmFyIHRoZXJtYWxDb25kdWN0aXZpdHlOZXcgPSBpbmZvTWF0ZXJpYWwudGhlcm1hbF9jb25kdWN0aXZpdHkodGVtcG5ldyk7XHJcbiAgICAgICAgdmFyIGhlYXRDYXBhY2l0eSA9IGluZm9NYXRlcmlhbC5oZWF0X2NhcGFjaXR5KHRlbXBuZXcpO1xyXG4gICAgICAgIHZhciBjb2VmID0gdG5tW3RubS5sZW5ndGggLSAxXTtcclxuICAgICAgICB2YXIgY29lZlRlbXBucCA9IDEuNSAqIE1hdGguY2JydChjb2VmIC0gK2RhdGEuc3RhcnRUZW1wKSArXHJcbiAgICAgICAgICAgIDUuNjcgKlxyXG4gICAgICAgICAgICAgICAgaW5mb01hdGVyaWFsLmJsYWNrbmVzcyhjb2VmKSAqXHJcbiAgICAgICAgICAgICAgICAoKE1hdGgucG93KChjb2VmICsgMjczKSAvIDEwMCwgNCkgLVxyXG4gICAgICAgICAgICAgICAgICAgIE1hdGgucG93KCgrZGF0YS5zdGFydFRlbXAgKyAyNzMpIC8gMTAwLCA0KSkgL1xyXG4gICAgICAgICAgICAgICAgICAgIChjb2VmIC0gK2RhdGEuc3RhcnRUZW1wKSk7XHJcbiAgICAgICAgdmFyIGNvZWZDaGVjayA9IGlzTmFOKGNvZWZUZW1wbnApID8gMCA6IGNvZWZUZW1wbnA7XHJcbiAgICAgICAgdmFyIHRlbVlha292bGV2ID0gY29lZiArXHJcbiAgICAgICAgICAgICgyICpcclxuICAgICAgICAgICAgICAgIHRpbWVJbnRlcnZhbEFycmF5W2luZGV4XSAqXHJcbiAgICAgICAgICAgICAgICAodGhlcm1hbENvbmR1Y3Rpdml0eU5ldyAqIChwYXJhbVByZUVuZExlbmd0aCAtIGNvZWYpIC1cclxuICAgICAgICAgICAgICAgICAgICBjb2VmQ2hlY2sgKiBsYXllciAqIChjb2VmIC0gK2RhdGEuc3RhcnRUZW1wKSkpIC9cclxuICAgICAgICAgICAgICAgIChpbmZvTWF0ZXJpYWwuYnVsa19tYXNzX2RyeV9jb25kaXRpb24gKiBsYXllciAqIGxheWVyICogaGVhdENhcGFjaXR5KTtcclxuICAgICAgICBhcnJheVlhay5wdXNoKHRlbVlha292bGV2KTtcclxuICAgICAgICB2YXIgY2hlY2sgPSBjb2VmQ2hlY2sgPT09IDAgPyAwIDogdGhlcm1hbENvbmR1Y3Rpdml0eU5ldyAvIGNvZWZDaGVjaztcclxuICAgICAgICB2YXIgem4gPSBwYXJhbVByZUVuZExlbmd0aCArXHJcbiAgICAgICAgICAgICh0bGF5ZXJbdGxheWVyLmxlbmd0aCAtIDFdW3RsYXllclt0bGF5ZXIubGVuZ3RoIC0gMV0ubGVuZ3RoIC0gMV0gLVxyXG4gICAgICAgICAgICAgICAgcGFyYW1QcmVFbmRMZW5ndGgpICpcclxuICAgICAgICAgICAgICAgICgoY2hlY2sgLSBsYXllciAvIDIpIC8gKGNoZWNrICsgbGF5ZXIgLyAyKSk7XHJcbiAgICAgICAgdmFyIHBhdGFuVG5tID0gem4gPCAwID8gK2RhdGEuc3RhcnRUZW1wIDogem47XHJcbiAgICAgICAgdG5tLnB1c2gocGF0YW5Ubm0pO1xyXG4gICAgICAgIHZhciB0bSA9ICh0bGF5ZXJbdGxheWVyLmxlbmd0aCAtIDFdW3RsYXllclt0bGF5ZXIubGVuZ3RoIC0gMV0ubGVuZ3RoIC0gMV0gKyB6bikgL1xyXG4gICAgICAgICAgICAyO1xyXG4gICAgICAgIHRucC5wdXNoKHRtKTtcclxuICAgICAgICBpbmRleCsrO1xyXG4gICAgfVxyXG4gICAgdmFyIGRhdGFJbmZvID0ge1xyXG4gICAgICAgIHRtbjogdG1uLFxyXG4gICAgICAgIHRvcDogdG9wLFxyXG4gICAgICAgIHRsYXllcjogdGxheWVyLFxyXG4gICAgICAgIHRucDogdG5wLFxyXG4gICAgICAgIHRubTogdG5tLFxyXG4gICAgICAgIGFycmF5WWFrOiBhcnJheVlhayxcclxuICAgIH07XHJcbiAgICByZXR1cm4gZGF0YUluZm87XHJcbn07XHJcbnZhciBpbml0aWFsUHJvcGVydGllcyA9IGZ1bmN0aW9uIChpbmZvTWF0ZXJpYWwsIGRhdGEpIHtcclxuICAgIC8vINGA0LDRgdGH0LXRgiDQvdCw0YfQsNC70YzQvdGL0YUg0LfQvdCw0YfQtdC90LjQuVxyXG4gICAgLy/RgNCw0YHRh9C10YIg0YLQtdC/0LvQvtGE0LjQt9C40YfQtdGB0LrQuNGFINGF0LDRgNCw0LrRgtC10YDQuNGB0YLQuNC6XHJcbiAgICAvL9GC0LXQv9C70L7Qv9GA0L7QstC+0LTQvdC+0YHRgtGMXHJcbiAgICB2YXIgdGhlcm1hbENvbmR1Y3Rpdml0eSA9IGluZm9NYXRlcmlhbC50aGVybWFsX2NvbmR1Y3Rpdml0eSgrZGF0YS5zdGFydFRlbXApO1xyXG4gICAgLy/RgtC10L/Qu9C+0LXQvNC60L7RgdGC0YxcclxuICAgIHZhciBoZWF0Q2FwYWNpdHkgPSBpbmZvTWF0ZXJpYWwuaGVhdF9jYXBhY2l0eSgrZGF0YS5zdGFydFRlbXApO1xyXG4gICAgLy/RgtC10LzQv9C10YDQsNGC0YPRgNC+0L/RgNC+0LLQvtC00L3QvtGB0YLRjFxyXG4gICAgdmFyIHRlbXBlcmF0dXJlQ29uZHVjdGl2aXR5ID0gKHRoZXJtYWxDb25kdWN0aXZpdHkgL1xyXG4gICAgICAgICgoaGVhdENhcGFjaXR5ICsgMC4wNSAqICtkYXRhLmh1bWlkaXR5KSAqXHJcbiAgICAgICAgICAgIGluZm9NYXRlcmlhbC5idWxrX21hc3NfZHJ5X2NvbmRpdGlvbikpICpcclxuICAgICAgICAzLjY7XHJcbiAgICAvL9Cz0YDQsNC90LjRh9C90YvQtSDRg9GB0LvQvtCy0LjRjyDRgtC10L/Qu9C+0L7QsdC80LXQvdCwINC90LAg0L7QsdC+0LPRgNC10LLQsNC10LzQvtC5INC/0L7QstC10YDRhdC90L7RgdGC0LhcclxuICAgIHZhciBib3VuZGFyeUNvbmRpdGlvbnMgPSAyOTtcclxuICAgIC8v0LzQsNC60YHQuNC80LDQu9GM0L3QsNGPINGC0L7Qu9GJ0LjQvdCwINGB0LvQvtC10LJcclxuICAgIHZhciB0aGlja25lc3NMYXllcnMgPSAyICogKHRoZXJtYWxDb25kdWN0aXZpdHkgLyBib3VuZGFyeUNvbmRpdGlvbnMpO1xyXG4gICAgLy/QvtC/0YDQtdC00LXQu9GP0LXQvCDRgtC+0LvRidC40L3RgyDRgdC70L7Rj1xyXG4gICAgdmFyIGxheWVyID0gdGhpY2tuZXNzTGF5ZXJzID4gMC4wMyA/IDAuMDMgOiAwLjAxO1xyXG4gICAgLy/QutC+0LvQuNGH0LXRgdGC0LLQviDRgdC70L7QtdCyXHJcbiAgICB2YXIgY291bnRMYXllcnMgPSBNYXRoLnJvdW5kKCtkYXRhLndhbGxUaGlja25lc3MgLyBsYXllcik7XHJcbiAgICAvL9C+0L/RgNC10LTQtdC70Y/QtdC8INGA0LDRgdGH0LXRgtC90YvQuSDQuNC90YLQtdGA0LLQsNC7INCy0YDQtdC80LXQvdC4XHJcbiAgICB2YXIgdGltZUludGVydmFsID0gKGxheWVyICogbGF5ZXIpIC8gKDIgKiB0ZW1wZXJhdHVyZUNvbmR1Y3Rpdml0eSk7XHJcbiAgICAvL9C30LDQv9C+0LvQvdGP0LXQvCDQvNCw0YHRgdC40LIg0YEg0LjQvdGC0LXRgNCy0LDQu9Cw0LzQuCDQstGA0LXQvNC10L3QuCDQv9GA0L7Qs9GA0LXQstCwINC20LXQu9C10LfQvtCx0LXRgtC+0L3QvdC+0Lkg0YHRgtC10L3Ri1xyXG4gICAgdmFyIHRpbWVJbnRlcnZhbEFycmF5ID0gX19zcHJlYWRBcnJheShbXSwgQXJyYXkoY291bnRMYXllcnMgKyAxKSwgdHJ1ZSkubWFwKGZ1bmN0aW9uIChfLCBpbmRleCkge1xyXG4gICAgICAgIHJldHVybiB0aW1lSW50ZXJ2YWwgKiAoaW5kZXggKyAxKTtcclxuICAgIH0pO1xyXG4gICAgLy/Qt9Cw0L/QvtC70L3Rj9C10Lwg0LzQsNGB0YHQuNCyINGC0LXQvNC/0LXRgNCw0YLRg9GA0L7QuSDQv9C+0LbQsNGA0LDQv9C+INGE0L7RgNC80YPQu9C1IFwi0YHRgtCw0L3QtNCw0YDRgtC90L7Qs9C+XCIg0L/QvtC20LDRgNCwXHJcbiAgICB2YXIgdGVtcEFycmF5ID0gX19zcHJlYWRBcnJheShbXSwgQXJyYXkoY291bnRMYXllcnMgKyAxKSwgdHJ1ZSkubWFwKGZ1bmN0aW9uIChfLCBpbmRleCkge1xyXG4gICAgICAgIHJldHVybiAoMzQ1ICogTWF0aC5sb2cxMCg4ICogdGltZUludGVydmFsICogKGluZGV4ICsgMSkgKiA2MCArIDEpICtcclxuICAgICAgICAgICAgK2RhdGEuc3RhcnRUZW1wKTtcclxuICAgIH0pO1xyXG4gICAgLy/Qt9C90LDRh9C10L3QuNGPINGBINGD0YHRgtCw0L3QvtCy0LrQuCBcItCQ0JrQmC0xXCJcclxuICAgIHZhciB0ZW1wSGVhdGVkU3VyZmFjZSA9IGRhdGEudGVtcEhlYXRlZFN1cmZhY2VcclxuICAgICAgICAucmVwbGFjZSgvXFxzL2csIFwiXCIpXHJcbiAgICAgICAgLnNwbGl0KFwiLFwiKVxyXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIE51bWJlcihpdGVtKTsgfSk7XHJcbiAgICB2YXIgdGVtcEhlYXRlZFN1cmZhY2VDaGVjayA9IHRlbXBIZWF0ZWRTdXJmYWNlLmxlbmd0aCA8IGNvdW50TGF5ZXJzICsgMVxyXG4gICAgICAgID8gX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCB0ZW1wSGVhdGVkU3VyZmFjZSwgdHJ1ZSksIEFycmF5KGNvdW50TGF5ZXJzICsgMSAtIHRlbXBIZWF0ZWRTdXJmYWNlLmxlbmd0aCkuZmlsbCh0ZW1wSGVhdGVkU3VyZmFjZVt0ZW1wSGVhdGVkU3VyZmFjZS5sZW5ndGggLSAxXSksIHRydWUpIDogdGVtcEhlYXRlZFN1cmZhY2U7XHJcbiAgICAvL9C30LLQv9C+0LvQvdC40Lwg0LzQsNGB0YHQuNCyINCz0YDQsNC90LjRh9C90YvQvNC4INGD0YHQu9C+0LLQuNGP0LzQuCDRgtC10L/Qu9C+0L7QsdC80LXQvdCwXHJcbiAgICB2YXIgYm91bmRhcnlDb25kaXRpb25zQXJyYXkgPSBfX3NwcmVhZEFycmF5KFtdLCBBcnJheShjb3VudExheWVycyArIDEpLCB0cnVlKS5tYXAoZnVuY3Rpb24gKF8sIGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuICgyOSArXHJcbiAgICAgICAgICAgIGluZm9NYXRlcmlhbC5yZWR1Y2VkX3JhZGlhdGlvbl9jb2VmZmljaWVudCh0ZW1wQXJyYXlbaW5kZXhdKSAqXHJcbiAgICAgICAgICAgICAgICAoKE1hdGgucG93KCh0ZW1wQXJyYXlbaW5kZXhdICsgMjczKSAvIDEwMCwgNCkgLVxyXG4gICAgICAgICAgICAgICAgICAgIE1hdGgucG93KCh0ZW1wSGVhdGVkU3VyZmFjZUNoZWNrW2luZGV4XSArIDI3MykgLyAxMDAsIDQpKSAvXHJcbiAgICAgICAgICAgICAgICAgICAgKHRlbXBBcnJheVtpbmRleF0gLSB0ZW1wSGVhdGVkU3VyZmFjZUNoZWNrW2luZGV4XSkpKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIG1hdGhNb2RlbCh0ZW1wQXJyYXksIGJvdW5kYXJ5Q29uZGl0aW9uc0FycmF5LCBkYXRhLCBpbmZvTWF0ZXJpYWwsIGNvdW50TGF5ZXJzLCBsYXllciwgdGltZUludGVydmFsQXJyYXkpO1xyXG59O1xyXG5leHBvcnQgdmFyIHN0YXJ0Q2FsY3VsYXRlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHZhciBpbmZvTWF0ZXJpYWwgPSBkZWZhdWx0RGF0YVtkYXRhLm1hdGVyaWFsVHlwZV07XHJcbiAgICBpZiAoaW5mb01hdGVyaWFsKSB7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IGluaXRpYWxQcm9wZXJ0aWVzKGluZm9NYXRlcmlhbCwgZGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBcImVycm9yXCI7XHJcbiAgICB9XHJcbn07XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgSW5wdXQsIEJ1dHRvbiwgU2VsZWN0LCBBbGVydCB9IGZyb20gXCJhbnRkXCI7XHJcbmltcG9ydCB7IHVzZUZvcm0sIENvbnRyb2xsZXIgfSBmcm9tIFwicmVhY3QtaG9vay1mb3JtXCI7XHJcbmltcG9ydCB7IGNoZWNrT2ZOdW1iZXIgfSBmcm9tIFwiLi4vbGliL3ZhbGlkYXRlXCI7XHJcbmltcG9ydCB7IEZvcm0gfSBmcm9tIFwiLi9Gb3JtLnN0eWxlZFwiO1xyXG5pbXBvcnQgeyBzdGFydENhbGN1bGF0ZSB9IGZyb20gXCIuLi9saWIvY2FsY3VsYXRlXCI7XHJcbmV4cG9ydCB2YXIgRm9ybU1jaHMgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nO1xyXG4gICAgdmFyIHNldElzT3BlbiA9IF9hLnNldElzT3Blbiwgc2V0R2V0UmVzdWx0ID0gX2Euc2V0R2V0UmVzdWx0O1xyXG4gICAgdmFyIF9oID0gdXNlRm9ybSgpLCBjb250cm9sID0gX2guY29udHJvbCwgaGFuZGxlU3VibWl0ID0gX2guaGFuZGxlU3VibWl0LCBlcnJvcnMgPSBfaC5mb3JtU3RhdGUuZXJyb3JzO1xyXG4gICAgdmFyIG9uU3VibWl0ID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICB2YXIgaW5mbyA9IHN0YXJ0Q2FsY3VsYXRlKGRhdGEpO1xyXG4gICAgICAgICAgICBpZiAoaW5mbykge1xyXG4gICAgICAgICAgICAgICAgc2V0R2V0UmVzdWx0KGluZm8pO1xyXG4gICAgICAgICAgICAgICAgc2V0SXNPcGVuKHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiAoX2pzeChcImRpdlwiLCB7IGNoaWxkcmVuOiBfanN4cyhGb3JtLCBfX2Fzc2lnbih7IG9uU3VibWl0OiBoYW5kbGVTdWJtaXQob25TdWJtaXQpIH0sIHsgY2hpbGRyZW46IFtfanN4KENvbnRyb2xsZXIsIHsgbmFtZTogXCJtYXRlcmlhbFR5cGVcIiwgY29udHJvbDogY29udHJvbCwgZGVmYXVsdFZhbHVlOiBcItCx0LXRgtC+0L1cIiwgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwi0J7QsdGP0LfQsNGC0LXQu9GM0L3QvtC1INC/0L7Qu9C1XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgcmVuZGVyOiBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9iO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmllbGQgPSBfYS5maWVsZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFNlbGVjdCwgX19hc3NpZ24oeyBwbGFjZWhvbGRlcjogXCJcXHUwNDEyXFx1MDQ0QlxcdTA0MzFcXHUwNDM1XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0M0NcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDQwXFx1MDQzOFxcdTA0MzBcXHUwNDNCXCIsIGNsYXNzTmFtZTogXCJzZWxlY3RcIiwgc3RhdHVzOiAoKF9iID0gZXJyb3JzID09PSBudWxsIHx8IGVycm9ycyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JzLm1hdGVyaWFsVHlwZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm1lc3NhZ2UpICYmIFwiZXJyb3JcIiwgb3B0aW9uczogW3sgdmFsdWU6IFwi0LHQtdGC0L7QvVwiLCBsYWJlbDogXCLQkdC10YLQvtC9XCIgfV0gfSwgZmllbGQpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSB9KSwgKChfYiA9IGVycm9ycyA9PT0gbnVsbCB8fCBlcnJvcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9ycy5tYXRlcmlhbFR5cGUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tZXNzYWdlKSAmJiAoX2pzeChBbGVydCwgeyBjbGFzc05hbWU6IFwibWVzc2FnZVwiLCBtZXNzYWdlOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQ0RlxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDM1XCIsIHR5cGU6IFwiZXJyb3JcIiB9KSksIF9qc3goQ29udHJvbGxlciwgeyBuYW1lOiBcIndhbGxUaGlja25lc3NcIiwgY29udHJvbDogY29udHJvbCwgZGVmYXVsdFZhbHVlOiBcIjAuMTJcIiwgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwi0J7QsdGP0LfQsNGC0LXQu9GM0L3QvtC1INC/0L7Qu9C1XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIGNoZWNrT2ZOdW1iZXIodmFsdWUpOyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0sIHJlbmRlcjogZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpZWxkID0gX2EuZmllbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoX2pzeChJbnB1dCwgX19hc3NpZ24oeyBwbGFjZWhvbGRlcjogXCJcXHUwNDIyXFx1MDQzRVxcdTA0M0JcXHUwNDQ5XFx1MDQzOFxcdTA0M0RcXHUwNDMwIFxcdTA0NDFcXHUwNDQyXFx1MDQzNVxcdTA0M0RcXHUwNDRCXCIsIHN0YXR1czogKChfYiA9IGVycm9ycyA9PT0gbnVsbCB8fCBlcnJvcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9ycy53YWxsVGhpY2tuZXNzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubWVzc2FnZSkgJiYgXCJlcnJvclwiIH0sIGZpZWxkKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gfSksICgoX2MgPSBlcnJvcnMgPT09IG51bGwgfHwgZXJyb3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvcnMud2FsbFRoaWNrbmVzcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLm1lc3NhZ2UpICYmIChfanN4KEFsZXJ0LCB7IGNsYXNzTmFtZTogXCJtZXNzYWdlXCIsIG1lc3NhZ2U6IFwiXFx1MDQxRVxcdTA0MzFcXHUwNDRGXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzRFxcdTA0M0VcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzQlxcdTA0MzVcIiwgdHlwZTogXCJlcnJvclwiIH0pKSwgX2pzeChDb250cm9sbGVyLCB7IG5hbWU6IFwic3RhcnRUZW1wXCIsIGNvbnRyb2w6IGNvbnRyb2wsIGRlZmF1bHRWYWx1ZTogXCIyMFwiLCBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCLQntCx0Y/Qt9Cw0YLQtdC70YzQvdC+0LUg0L/QvtC70LVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGU6IGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gY2hlY2tPZk51bWJlcih2YWx1ZSk7IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgcmVuZGVyOiBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9iO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmllbGQgPSBfYS5maWVsZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KElucHV0LCBfX2Fzc2lnbih7IHBsYWNlaG9sZGVyOiBcIlxcdTA0MURcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDMwXFx1MDQ0RiBcXHUwNDQyXFx1MDQzNVxcdTA0M0NcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NDNcXHUwNDQwXFx1MDQzMFwiLCBzdGF0dXM6ICgoX2IgPSBlcnJvcnMgPT09IG51bGwgfHwgZXJyb3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvcnMuc3RhcnRUZW1wKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubWVzc2FnZSkgJiYgXCJlcnJvclwiIH0sIGZpZWxkKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gfSksICgoX2QgPSBlcnJvcnMgPT09IG51bGwgfHwgZXJyb3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvcnMuc3RhcnRUZW1wKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QubWVzc2FnZSkgJiYgKF9qc3goQWxlcnQsIHsgY2xhc3NOYW1lOiBcIm1lc3NhZ2VcIiwgbWVzc2FnZTogXCJcXHUwNDFFXFx1MDQzMVxcdTA0NEZcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQzNVwiLCB0eXBlOiBcImVycm9yXCIgfSkpLCBfanN4KENvbnRyb2xsZXIsIHsgbmFtZTogXCJlbmRUZW1wXCIsIGNvbnRyb2w6IGNvbnRyb2wsIGRlZmF1bHRWYWx1ZTogXCIxODBcIiwgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwi0J7QsdGP0LfQsNGC0LXQu9GM0L3QvtC1INC/0L7Qu9C1XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIGNoZWNrT2ZOdW1iZXIodmFsdWUpOyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0sIHJlbmRlcjogZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpZWxkID0gX2EuZmllbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoX2pzeChJbnB1dCwgX19hc3NpZ24oeyBwbGFjZWhvbGRlcjogXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0RcXHUwNDM1XFx1MDQ0N1xcdTA0M0RcXHUwNDMwXFx1MDQ0RiBcXHUwNDQyXFx1MDQzNVxcdTA0M0NcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NDNcXHUwNDQwXFx1MDQzMFwiLCBzdGF0dXM6ICgoX2IgPSBlcnJvcnMgPT09IG51bGwgfHwgZXJyb3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvcnMuZW5kVGVtcCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm1lc3NhZ2UpICYmIFwiZXJyb3JcIiB9LCBmaWVsZCkpKTtcclxuICAgICAgICAgICAgICAgICAgICB9IH0pLCAoKF9lID0gZXJyb3JzID09PSBudWxsIHx8IGVycm9ycyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JzLmVuZFRlbXApID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5tZXNzYWdlKSAmJiAoX2pzeChBbGVydCwgeyBjbGFzc05hbWU6IFwibWVzc2FnZVwiLCBtZXNzYWdlOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQ0RlxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDM1XCIsIHR5cGU6IFwiZXJyb3JcIiB9KSksIF9qc3goQ29udHJvbGxlciwgeyBuYW1lOiBcImh1bWlkaXR5XCIsIGNvbnRyb2w6IGNvbnRyb2wsIGRlZmF1bHRWYWx1ZTogXCIyXCIsIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcItCe0LHRj9C30LDRgtC10LvRjNC90L7QtSDQv9C+0LvQtVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZTogZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiBjaGVja09mTnVtYmVyKHZhbHVlKTsgfSxcclxuICAgICAgICAgICAgICAgICAgICB9LCByZW5kZXI6IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2I7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaWVsZCA9IF9hLmZpZWxkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goSW5wdXQsIF9fYXNzaWduKHsgcGxhY2Vob2xkZXI6IFwiXFx1MDQxMlxcdTA0M0JcXHUwNDMwXFx1MDQzNlxcdTA0M0RcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDRDXCIsIHN0YXR1czogKChfYiA9IGVycm9ycyA9PT0gbnVsbCB8fCBlcnJvcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9ycy5zdGFydFRlbXApID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tZXNzYWdlKSAmJiBcImVycm9yXCIgfSwgZmllbGQpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSB9KSwgKChfZiA9IGVycm9ycyA9PT0gbnVsbCB8fCBlcnJvcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9ycy5zdGFydFRlbXApID09PSBudWxsIHx8IF9mID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZi5tZXNzYWdlKSAmJiAoX2pzeChBbGVydCwgeyBjbGFzc05hbWU6IFwibWVzc2FnZVwiLCBtZXNzYWdlOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQ0RlxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDM1XCIsIHR5cGU6IFwiZXJyb3JcIiB9KSksIF9qc3goQ29udHJvbGxlciwgeyBuYW1lOiBcInRlbXBIZWF0ZWRTdXJmYWNlXCIsIGNvbnRyb2w6IGNvbnRyb2wsIGRlZmF1bHRWYWx1ZTogXCI0MTUuNiwgNjE1LCA3MTgsIDc4Mi44XCIsIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcItCe0LHRj9C30LDRgtC10LvRjNC90L7QtSDQv9C+0LvQtVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sIHJlbmRlcjogZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpZWxkID0gX2EuZmllbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoX2pzeChJbnB1dCwgX19hc3NpZ24oeyBwbGFjZWhvbGRlcjogXCJcXHUwNDIyXFx1MDQzNVxcdTA0M0NcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NDNcXHUwNDQwXFx1MDQzMCBcXHUwNDNFXFx1MDQzMVxcdTA0M0VcXHUwNDMzXFx1MDQ0MFxcdTA0MzVcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDNDXFx1MDQzRVxcdTA0MzkgXFx1MDQzRlxcdTA0M0VcXHUwNDMyXFx1MDQzNVxcdTA0NDBcXHUwNDQ1XFx1MDQzRFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0MzhcIiwgc3RhdHVzOiAoKF9iID0gZXJyb3JzID09PSBudWxsIHx8IGVycm9ycyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JzLnRlbXBIZWF0ZWRTdXJmYWNlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubWVzc2FnZSkgJiYgXCJlcnJvclwiIH0sIGZpZWxkKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gfSksICgoX2cgPSBlcnJvcnMgPT09IG51bGwgfHwgZXJyb3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvcnMudGVtcEhlYXRlZFN1cmZhY2UpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5tZXNzYWdlKSAmJiAoX2pzeChBbGVydCwgeyBjbGFzc05hbWU6IFwibWVzc2FnZVwiLCBtZXNzYWdlOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQ0RlxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDM1XCIsIHR5cGU6IFwiZXJyb3JcIiB9KSksIF9qc3goQnV0dG9uLCBfX2Fzc2lnbih7IGh0bWxUeXBlOiBcInN1Ym1pdFwiLCB0eXBlOiBcInByaW1hcnlcIiB9LCB7IGNoaWxkcmVuOiBcIlxcdTA0MjBcXHUwNDMwXFx1MDQ0MVxcdTA0NDFcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDMwXFx1MDQ0MlxcdTA0NENcIiB9KSldIH0pKSB9KSk7XHJcbn07XHJcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuaW1wb3J0IHsgQ2FudmFzIH0gZnJvbSBcIkByZWFjdC10aHJlZS9maWJlclwiO1xyXG5pbXBvcnQgeyBPcmJpdENvbnRyb2xzIH0gZnJvbSBcIkByZWFjdC10aHJlZS9kcmVpXCI7XHJcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCIuL01vZGVsLnN0eWxlZFwiO1xyXG5leHBvcnQgdmFyIE1vZGVsID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgZ2V0UmVzdWx0ID0gX2EuZ2V0UmVzdWx0O1xyXG4gICAgY29uc29sZS5sb2coZ2V0UmVzdWx0KTtcclxuICAgIHJldHVybiAoX2pzeChDb250YWluZXIsIF9fYXNzaWduKHsgaWQ6IFwiY2FudmFzLWNvbnRhaW5lclwiIH0sIHsgY2hpbGRyZW46IF9qc3hzKENhbnZhcywgX19hc3NpZ24oeyBmbGF0OiB0cnVlLCBsaW5lYXI6IHRydWUgfSwgeyBjaGlsZHJlbjogW19qc3goXCJhbWJpZW50TGlnaHRcIiwgeyBpbnRlbnNpdHk6IDAuNSB9KSwgX2pzeChcInNwb3RMaWdodFwiLCB7IHBvc2l0aW9uOiBbMTAsIDEwLCAxMF0sIGFuZ2xlOiAwLjE1LCBwZW51bWJyYTogMSB9KSwgX2pzeChcInBvaW50TGlnaHRcIiwgeyBwb3NpdGlvbjogWy0xMCwgLTEwLCAtMTBdIH0pLCBfanN4cyhcIm1lc2hcIiwgeyBjaGlsZHJlbjogW19qc3goXCJib3hHZW9tZXRyeVwiLCB7IGFyZ3M6IFsxLCAxLCAxXSB9KSwgX2pzeChcIm1lc2hTdGFuZGFyZE1hdGVyaWFsXCIsIHsgY29sb3I6IFwib3JhbmdlXCIgfSldIH0pLCBfanN4KE9yYml0Q29udHJvbHMsIHt9KV0gfSkpIH0pKSk7XHJcbn07XHJcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEZvcm1NY2hzIH0gZnJvbSBcImZlYXR1cmVzL0Zvcm1cIjtcclxuaW1wb3J0IHsgTW9kZWwgfSBmcm9tIFwiZmVhdHVyZXMvTW9kZWxcIjtcclxuaW1wb3J0IHsgQmxvY2sgfSBmcm9tIFwiLi9NYWluQmxvY2suc3R5bGVkXCI7XHJcbmV4cG9ydCB2YXIgTWFpbkJsb2NrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIF9hID0gdXNlU3RhdGUobnVsbCksIGdldFJlc3VsdCA9IF9hWzBdLCBzZXRHZXRSZXN1bHQgPSBfYVsxXTtcclxuICAgIHZhciBfYiA9IHVzZVN0YXRlKGZhbHNlKSwgaXNPcGVuID0gX2JbMF0sIHNldElzT3BlbiA9IF9iWzFdO1xyXG4gICAgcmV0dXJuIChfanN4cyhCbG9jaywgeyBjaGlsZHJlbjogW19qc3goRm9ybU1jaHMsIHsgc2V0SXNPcGVuOiBzZXRJc09wZW4sIHNldEdldFJlc3VsdDogc2V0R2V0UmVzdWx0IH0pLCBpc09wZW4gJiYgX2pzeChNb2RlbCwgeyBnZXRSZXN1bHQ6IGdldFJlc3VsdCB9KV0gfSkpO1xyXG59O1xyXG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5pbXBvcnQgeyBNYWluQmxvY2sgfSBmcm9tIFwid2lkZ2V0cy9NYWluQmxvY2tcIjtcclxudmFyIE1haW5QYWdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIF9qc3goTWFpbkJsb2NrLCB7fSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IE1haW5QYWdlO1xyXG4iXSwibmFtZXMiOlsidGVtcGxhdGVPYmplY3RfMSIsImNvb2tlZCIsInJhdyIsImNoZWNrT2ZOdW1iZXIiLCJ2YWx1ZSIsIm1hdGNoZXMiLCJtYXRjaCIsImxlbmd0aCIsIkZvcm0iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImRlZmF1bHREYXRhIiwiYnVsa19tYXNzX2RyeV9jb25kaXRpb24iLCJ0aGVybWFsX2NvbmR1Y3Rpdml0eSIsInQiLCJoZWF0X2NhcGFjaXR5IiwicmVkdWNlZF9yYWRpYXRpb25fY29lZmZpY2llbnQiLCJibGFja25lc3MiLCJfX3NwcmVhZEFycmF5IiwidG8iLCJmcm9tIiwicGFjayIsImFyZ3VtZW50cyIsImFyIiwiaSIsImwiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImNvbmNhdCIsIl9fYXNzaWduIiwiYXNzaWduIiwicyIsIm4iLCJwIiwiaGFzT3duUHJvcGVydHkiLCJhcHBseSIsInRoaXMiLCJGb3JtTWNocyIsIl9hIiwiX2IiLCJfYyIsIl9kIiwiX2UiLCJfZiIsIl9nIiwic2V0SXNPcGVuIiwic2V0R2V0UmVzdWx0IiwiX2giLCJjb250cm9sIiwiaGFuZGxlU3VibWl0IiwiZXJyb3JzIiwiZm9ybVN0YXRlIiwiY2hpbGRyZW4iLCJvblN1Ym1pdCIsImRhdGEiLCJpbmZvIiwiaW5mb01hdGVyaWFsIiwibWF0ZXJpYWxUeXBlIiwidGhlcm1hbENvbmR1Y3Rpdml0eSIsInN0YXJ0VGVtcCIsInRlbXBlcmF0dXJlQ29uZHVjdGl2aXR5IiwiaHVtaWRpdHkiLCJsYXllciIsImNvdW50TGF5ZXJzIiwiTWF0aCIsInJvdW5kIiwid2FsbFRoaWNrbmVzcyIsInRpbWVJbnRlcnZhbCIsInRpbWVJbnRlcnZhbEFycmF5IiwibWFwIiwiXyIsImluZGV4IiwidGVtcEFycmF5IiwibG9nMTAiLCJ0ZW1wSGVhdGVkU3VyZmFjZSIsInJlcGxhY2UiLCJzcGxpdCIsIml0ZW0iLCJOdW1iZXIiLCJ0ZW1wSGVhdGVkU3VyZmFjZUNoZWNrIiwiZmlsbCIsImJvdW5kYXJ5Q29uZGl0aW9uc0FycmF5IiwicG93IiwidG1uIiwidG9wIiwidG5wIiwidG5tIiwiYXJyYXlZYWsiLCJ0bGF5ZXIiLCJwdXNoIiwiZW5kVGVtcCIsImFtYmllbnRUZW1wZXJhdHVyZSIsInRlbXAiLCJ0ZW1wb3AiLCJqIiwicGFyYW1QcmVFbmRMZW5ndGgiLCJ0ZW1wbmV3IiwidGhlcm1hbENvbmR1Y3Rpdml0eU5ldyIsImhlYXRDYXBhY2l0eSIsImNvZWYiLCJjb2VmVGVtcG5wIiwiY2JydCIsImNvZWZDaGVjayIsImlzTmFOIiwidGVtWWFrb3ZsZXYiLCJjaGVjayIsInpuIiwicGF0YW5Ubm0iLCJ0bSIsIm1hdGhNb2RlbCIsImluaXRpYWxQcm9wZXJ0aWVzIiwic3RhcnRDYWxjdWxhdGUiLCJuYW1lIiwiZGVmYXVsdFZhbHVlIiwicnVsZXMiLCJyZXF1aXJlZCIsInJlbmRlciIsImZpZWxkIiwicGxhY2Vob2xkZXIiLCJjbGFzc05hbWUiLCJzdGF0dXMiLCJtZXNzYWdlIiwib3B0aW9ucyIsImxhYmVsIiwidHlwZSIsInZhbGlkYXRlIiwiaHRtbFR5cGUiLCJDb250YWluZXIiLCJNb2RlbCIsImdldFJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImZsYXQiLCJsaW5lYXIiLCJpbnRlbnNpdHkiLCJwb3NpdGlvbiIsImFuZ2xlIiwicGVudW1icmEiLCJhcmdzIiwiY29sb3IiLCJPcmJpdENvbnRyb2xzIiwiQmxvY2siLCJNYWluQmxvY2siLCJ1c2VTdGF0ZSIsImlzT3BlbiJdLCJzb3VyY2VSb290IjoiIn0=